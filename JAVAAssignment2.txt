Q1) 
1. Find the Fibonacci Series up to Nth Term in Java Language 
a. Method 1: Using Iteration (Using Three variables) 
b. Method 2: Using Recursion 
c. Method 3: Using Formula a[i]=a[i-1]+a[i-2] (Using Array)

A

import java.util.*;
public class FibocciIteration {
    public static void main(String[] args) {
        Scanner in =new Scanner(System.in);
        int n;
        System.out.println("Enter the number :");
        n=in.nextInt();
        int a=0;int b=1;
        System.out.print(a+" "+b);
        for(int i=2;i<=n;i++){
            int s=a+b;
            System.out.print(" "+s);
            a=b;
            b=s;
        }
    }
}


B

import java.util.*;

public class FibonacciRecursion {
    static int a = 0;
    static int b = 1;
    static int c;

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        System.out.println("Enter the number");
        int n = in.nextInt();
        System.out.print(a + " " + b);
        FibonacciRecursion fibo = new FibonacciRecursion();
        fibo.printFibo(n - 2);
    }
    void printFibo(int i) {
        if (i>=1) {
            c=a+b;
            System.out.print(" " + c);
            a=b;
            b=c;
            printFibo(i-1);
        }
    }
}


C

import java.util.*;
public class FibonacciArray {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        System.out.println("Enter the Number :");
        int n=in.nextInt();
        int fibo[] = new int[n];
        fibo[0]=0;
        fibo[1]=1;
        for(int i=2;i<n;i++){
            fibo[i] = fibo[i-1]+fibo[i-2];
        }
        System.out.print(Arrays.toString(fibo));
    }
}



Q2) Program to check Harshad number or not using Java Hint: - Harshad number is a number or an integer in base 10 which is completely divisible by sum of its digits. 
Example : Suppose a number 24.
Calculate the sum of digits of the number (2 + 4) = 6 . 
Check whether the number entered by user is completely divisible by sum of its digits or not.


import java.util.*;
public class Harshad {
    public static void main(String[] args) {
        Scanner in=new Scanner(System.in);
        System.out.println("Enter the Number :");
        int n=in.nextInt();
        int org=n;
        int sum=0;
        while(n>0){
            int remainder=n%10;
             sum+=remainder;
             n/=10;
        }
        if(org%sum==0){
            System.out.println(org+ " is a Harshad Number");
        }else System.out.println(org+ " is Not a Harshad Number");
    }
}



Q3)  Factorial of a Number using Recursion in Java


import java.util.*;
public class FactorialRecursion {

    static int factorial(int i){
        if(i==0)
        return 1;
        else
        return (i*factorial(i-1));
    }
    public static void main(String[] args) {
        Scanner in=new Scanner(System.in);
        System.out.println("Enter the Number :");
        int n=in.nextInt();
        int fact=1;
        fact=factorial(n);
        System.out.println("Factorial of "+n+" is "+fact);
    }
}



Q4) Java Program for Sorting first half in Ascending order and second half in Descending order Example Input : arr[6] = [1, 90, 34, 89, 7, 9] Output : 1 7 9 90 89 34


import java.util.*;
class ArraySort{

	static void print(int[] arr, int n){
		Arrays.sort(arr);
		for (int i=0;i<n/2;i++){
			System.out.print(arr[i] + " ");
		}
		for (int j=n-1; j>=n/2;j--){
			System.out.print(arr[j] + " ");
		}
	}
	public static void main(String[] args) {
		int[] arr = {5, 4, 6, 2, 1, 3, 8, -1};
		int n = arr.length;
		print(arr, n);
	}
} 




Q5) Java program to count numbers of even and odd elements in an array


import java.util.*;
class EvenOdd{
	public static void main(String[] args) {
		int[] arr = {5, 4, 6, 2, 1, 3, 8, 7, 6, 10, 13};
		int n = arr.length;
        int even=0;
        int odd=0;
        for(int i=0;i<n;i++){
            if(arr[i]%2==0){
                even++;
            }else odd++;
        }
        System.out.println("Even Numbers are :"+even);
        System.out.println("Odd Numbers are :"+odd);

	}
}




Q6) Java program for rotation of elements of array- left and right. An array is said to be right rotated if all the selected elements were moved towards right by one position.


package assignment;
import java.util.Arrays;

public class Arrayleftright {
	
	public static void leftRotate(int[] arr) {
		int temp = arr[0];
		for (int i = 1; i < arr.length; i++) {
			arr[i - 1] = arr[i];
		}
		arr[arr.length - 1] = temp;
	}

	public static void rightRotate(int[] arr) {
		int temp = arr[arr.length - 1];
		for (int i = arr.length - 1; i > 0; i--) {
			arr[i] = arr[i - 1];
		}
		arr[0] = temp;
	}
	public static void main(String[] args) {
	
		int[] arr = { 1, 2, 3, 4, 5 };

		System.out.println("Original array: " + Arrays.toString(arr));

		leftRotate(arr);
		System.out.println("Array after left rotation: " + Arrays.toString(arr));

		rightRotate(arr);
		System.out.println("Array after right rotation: " + Arrays.toString(arr));

	}

}


Q7)  Rotate a matrix by 90 degree in clockwise direction in Java.

package assignment;
import java.util.Scanner;
public class Q7 {

	public static void rotateMatrix(int[][] matrix) {
		for (int i = 0; i < matrix.length; i++) {
			for (int j = i; j < matrix[0].length; j++) {
				int temp = matrix[i][j];
				matrix[i][j] = matrix[j][i];
				matrix[j][i] = temp;
			}
		}

		for (int i = 0; i < matrix.length; i++) {
			int start = 0;
			int end = matrix[0].length - 1;
			while (start < end) {
				int temp = matrix[i][start];
				matrix[i][start] = matrix[i][end];
				matrix[i][end] = temp;
				start++;
				end--;
			}
		}
	}

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);

		System.out.print("Enter number of rows: ");
		int rows = scanner.nextInt();
		System.out.print("Enter number of columns: ");
		int columns = scanner.nextInt();

		int[][] matrix = new int[rows][columns];
		System.out.println("Enter the elements of the matrix:");
		for (int i = 0; i < rows; i++) {
			for (int j = 0; j < columns; j++) {
				matrix[i][j] = scanner.nextInt();
			}
		}

		System.out.println("Original Matrix:");
		printMatrix(matrix);

		rotateMatrix(matrix);

		System.out.println("Matrix after 90 degree clockwise rotation:");
		printMatrix(matrix);

		scanner.close();
	}

	public static void printMatrix(int[][] matrix) {
		for (int[] row : matrix) {
			for (int cell : row) {
				System.out.print(cell + " ");
			}
			System.out.println();

	}

}
}



Q8)  Create a student class with the following data members:- rollNo, Name, Course, Mark, grade, result. Develop function members to a. assign values for rollNo, name, course and mark. b. 
Find out the grade for the student(if mark >90, then grade is A, if mark is between 80 and 90, then grade is B, if mark is between 70 and 80, then grade is C, if mark is between 60 and 70, 
then grade is D, otherwise, grade is F. c. Find the result of the student. If mark>60, then the result is Pass, otherwise Fail d. 
Print out the details of the student 

//CLASS FILE
package Assignment2;

public class Student {
	
	
		
		private
		int rollno; 
		float mark;
		String name, course, result;
		char grade;
		
		public
		
		void calculateGrade()
		{
			
			if(mark>90)
			{
				System.out.println(grade='A');
			}
			else if(80<=mark || mark<=90)
			{
				System.out.println(grade='B');
			}
			else if(70<=mark || mark<=80)
			{
				System.out.println(grade='C');
			}
			else if(60>=mark || mark<=70)
			{
				System.out.println(grade='D');
			}
			else
			{
				System.out.println(grade='F');
			}
			
		}
		
		void findResult()
		{
			if(mark>60)
			{
				System.out.println("Result= Pass");
			}
			else
			{
				System.out.println("Result= Fail");
			}
			
		}
		
		void display(int rollno,String name,String course,float mark)
		{
			this.rollno=rollno;
			this.name=name;
			this.course=course;
			this.mark=mark;
			System.out.println("name: "+name);
			System.out.println("rollno: "+rollno);
			System.out.println("course: "+course);
			System.out.println("Marks: "+mark);
		}

}


//MAIN FILE
package Assignment2;

public class st {
	public static void main(String[] args) {
		
		Student s=new Student();
		s.display(20, "Ram", "Java",99.9f);
		s.calculateGrade();
		s.findResult();
	
	}

}






Q9)  Create a class, named Account and include the required attributes and behaviours in it. Inherit another class called “SavingsAccount” from it and add new attributes and behaviours, as needed. Inherit another class called “LoanAccount” from Account and add new attributes and behaviours, as needed. Inherit another class called “HousingLoan” from LoanAccount and add new attributes and behaviours, as needed. Create objects of SavingsAccount and HousingLoan and perform the methods to 1. Open an account, 2. Deposit amount, 3. Withdraw amount, 4. Print the account details. (Consider applying the Access Modifiers also)


//ACCOUNT FILE

package Assignment2;

class Account {
	
	protected String accNo;
	protected double bal;

	public  Account(String accNo)
	{
		this.accNo=accNo;
		bal=0;	
	
	}
	public void openAccount() {
		System.out.println("Open an account");
	}
	
	public void deposite(double amt) {
		bal=bal+amt;
	}
	public void withdraw(double amt)
	{
		if(bal>amt)
		{
			bal=bal-amt;
		}
		else
		{
			System.out.println("Insufficient funds......");
		}
	}
		public void printAccountDetails() {
		System.out.println("Account number: "+accNo);
		System.out.println("Balance: "+bal);
		
		
	}

}


//SAVING ACCOUNT FILE

package Assignment2;

public class SavingAccount extends Account {
	protected double interestRate;
	public SavingAccount(String accNo,double interestRate)
	{
		super(accNo);
		this.interestRate=interestRate;
		
	}
	public double addInterst()
	{
		double interest=bal*interestRate;
		bal=bal+interest;
		return interest;
				
	}
	

}


//LOAN ACCOUNT FILE

package Assignment2;

public class LoanAccount extends Account{
double loanAmt;

public LoanAccount(String accNo, double loanAmt) {
	super(accNo);
	this.loanAmt = loanAmt;
   }
public void payEMI(double emi) {
	if(bal>emi) {
		System.out.println("EMI paid successfully");
		loanAmt=loanAmt-emi;
	}
	else {
		System.out.println("Insufficient balance");
	}
}
	

}


//HOUSING LOAN FILE

package Assignment2;

public class Housingloan extends LoanAccount{
	int tenure;
	
	

	public Housingloan(String accNo, double loanAmt, int tenure) {
		super(accNo, loanAmt);
		this.tenure = tenure;
	}
	public void extendTenure(int yr) {
		tenure=tenure+yr;
		System.out.println("Tenure extend successfully");
	}


}


//TEST ACCOUNT FILE

package Assignment2;

public class TestAcc {
 public static void main(String[] args) {
	 
	 SavingAccount sa=new SavingAccount("SA872398", 0.05);
	 sa.deposite(5000);
	 sa.printAccountDetails();
	 sa.addInterst();
	 sa.printAccountDetails();
	 
	 Housingloan h=new Housingloan("DF764836", 5000, 10);
	 h.payEMI(1500);
	 h.extendTenure(10);

	 
	
}

}

















 